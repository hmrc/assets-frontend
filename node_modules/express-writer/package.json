{
  "name": "express-writer",
  "version": "0.0.4",
  "description": "Allows developers to develop like they would in Express, but output rendered html as static files",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/mocha/bin/mocha test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:rtorr/express-writer.git"
  },
  "author": {
    "name": "Richard Torruellas",
    "email": "rtorruellas@gmail.com"
  },
  "contributors": [
    {
      "name": "Richard Torruellas",
      "email": "rtorruellas@gmail.com"
    },
    {
      "name": "Jake Heun",
      "email": "jacobheun@gmail.com"
    }
  ],
  "license": "MIT",
  "dependencies": {
    "mkdirp": "~0.3.5"
  },
  "devDependencies": {
    "express": "3.4.4",
    "rimraf": "latest",
    "mocha": "latest"
  },
  "readme": "#express-writer\n\nA small piece of code that sits inside express's res.send function. It captures the route that was called, the body\nthat would be sent to the browser, and writes that result to an html file.\n\nThink about it like this:\n\nYou write an express route `/hello-world` and the result would be `<h1>Hello World</h1>`. This module will write\n`dist/hello-world/index.html` with `<h1>Hello World</h1>` inside of it.\n\nDuring development, you never generate the static pages. The plan is to just have some automation to hit those routes\nfor you during a build process.\n\nWe have an example implementation here:\n\n[https://github.com/meltmedia/express-static](https://github.com/meltmedia/express-static)\n\n#small example\n\n```\nvar writer = require('express-writer');\napp.use(writer.watch);\n```\n\nHit a route in your browser, and watch the static files generate in the `dist` directory.\n\n## Change the dist directory\n\n```\nwriter.setWriteDirectory('./out');\n```\n\n#Test\n\n```\nnpm test\n```\n\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Richard Torruellas III <rtorruellas@gmail.com>, Jacob Heun <jacob.heun@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rtorr/express-writer/issues"
  },
  "homepage": "https://github.com/rtorr/express-writer",
  "_id": "express-writer@0.0.4",
  "dist": {
    "shasum": "8ddc14a2609bede51338563376e2f45e3b822c79"
  },
  "_from": "express-writer@",
  "_resolved": "https://registry.npmjs.org/express-writer/-/express-writer-0.0.4.tgz"
}
